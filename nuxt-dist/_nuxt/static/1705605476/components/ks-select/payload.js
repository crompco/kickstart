__NUXT_JSONP__("/components/ks-select", (function(a,b,c,d,e,f,g,h,i,j,k,l,m){return {data:[{data:{slug:"ks-select",title:g,source:"PageKsSelect",api:{props:[{name:h,type:i,default:d,description:"This is the name given to the select and also it will be assumed as the itemKey if no itemKey is provided"},{name:j,type:i,default:d,description:"This is used in the filtering as users type it is also used to display the selection"},{name:"value",vmodel:e,type:"String, Number",description:"This is the prop that the v-model will bind to. So if you are using v-model you can omit this."},{name:"items",type:"Array",default:d,description:"This is the list of options. \u003Cpre\u003E[{Option data...},{Option data...}]\u003C\u002Fpre\u003E"},{name:"placeholder",type:c,default:"Select...",description:"The placeholder in the select when nothing is selected."},{name:"searchThreshold",type:f,default:7,description:"The minimum number of items for the search input to be shown."},{name:"disableSearch",type:a,default:b,description:"Whether or not to disable the search field."},{name:"itemFilter",type:"Function, String",default:j,description:"When a function is provided it will be used when filtering results from the search box. The function should accept the item as a parameter and should return true for a match. If a String is provided it is used as the key to filter on when filtering items."},{name:"itemKey",type:c,default:h,description:"This is the key used as the value for the items."},{name:"listHeight",type:c,default:"250px",description:"The height of the drop down list"},{name:"minSearch",type:f,default:0,description:"Minimum number of characters typed in the search box needed to trigger the search"},{name:"groupBy",type:c,default:d,description:"The key to group items by. Dot notation is supported for nested values in the items."},{name:"singleDeselect",type:a,default:b,description:"Allows users to deselect a selected option."},{name:"disabled",type:a,default:b,description:"Disables the select"},{name:"forceValues",type:a,default:b,description:"When set to true the v-model will bind to the value key instead of the entire object."},{name:"multiple",type:a,default:b,description:"Whether or not to support multiple selections"},{name:"cacheResults",type:a,default:e,description:"Whether or not to cache search results."},{name:"paginated",type:a,default:b,description:"Whether or not the search data is being paginated. When true the select will emit the search event when the list is navigated to the end."},{name:"paginateThreshold",type:f,default:3,description:"Determines when the paginate request will be called. So when the user scrolls down the list if this is set to 3 the request will be made when the user is 3 list items away from the bottom of the list."},{name:"stopParentScroll",type:a,default:e,description:"When set to true the list will automatically prevent the parent container from scrolling when the list scroll has reached the bottom."},{name:"emptyMessage",type:c,default:k,description:"A message to use when the select is empty. (ex: \"No Results\"). If left blank then no message will show up."},{name:"acceptEmptySelection",type:a,default:k,description:"Works with the emptyMessage property. If this is set to true the empty option will be a selectable item instead of just text."}],events:[{name:"input",description:"Fired when the value is changed"},{name:"focus",description:"Fired when the input field is focused."},{name:"blur",description:"Fired when the input field is blurred"},{name:"clear",description:"Fired when the list is cleared"},{name:"search",description:"\"Fired when the input field is expecting a search to be performed. (depends on the minSearch prop) The payload is as follows...\n\u003Cpre\u003E\n    {\n        term: term, \u002F\u002F the term used in the search\n        page: page, \u002F\u002F the page of the search being requested\n        callback: function\n        \u002F\u002F The callback function should be called with the proper endpoint to use\n        \u002F\u002F an optional data key param can be sent as second parameter\n        \u002F\u002F example: callback(`countries?q=${term}&page=${page}`, 'results')\n    }\n\u003C\u002Fpre\u003E\"\n"}],methods:[{name:"open()",description:"Used to open the select dropdown"},{name:"close()",description:"Used to close the select dropdown"},{name:"toggleOpen()",description:"Used to toggle the select dropdown"},{name:"selectItem(item_index)",description:"Called to select an item. Expects the index of the item in the list."},{name:"selectUp()",description:"Moves the selection up"},{name:"selectDown()",description:"Moves the selection down"},{name:"clear()",description:"Clears the search field"},{name:"clearCache()",description:"Clears the search cache"},{name:"getSelectedItem()",description:"Retrieves the selected item from list"},{name:"getItemByIndex(item_index)",description:"Retrieves an item by the given index"},{name:"refreshSelected()",description:"Updates the selects display. This should not be needed since the select will automatically refresh the display"},{name:"reset()",description:"Clears selection, items, and cache"}],slots:[{name:"default",description:"This is a \u003Ca href=\"https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002Fcomponents.html#Scoped-Slots\" target=\"_blank\"\u003Escoped slot\u003C\u002Fa\u003E. This is used so that you have more control over the look of the data. The component loops through the data and passes the props with a props attribute. An example can be seem above in autocomplete and pagination examples."},{name:"label",description:"This is a \u003Ca href=\"https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002Fcomponents.html#Scoped-Slots\" target=\"_blank\"\u003Escoped slot\u003C\u002Fa\u003E. This will be used to show the selection. If no selection is made it will not render this slot. It will take a scope of {value: ..., label}. An example can be seen above."}]},toc:[],body:{type:"root",children:[]},dir:"\u002Fcomponents",path:l,extension:".md",createdAt:m,updatedAt:m}}],fetch:{"components:0":{components:[{title:"Accordion",path:"\u002Fcomponents\u002Fks-accordion"},{title:"Action Menu",path:"\u002Fcomponents\u002Fks-action-menu"},{title:"AutoComplete",path:"\u002Fcomponents\u002Fks-autocomplete"},{title:"Buttons",path:"\u002Fcomponents\u002Fks-button"},{title:"Calendar",path:"\u002Fcomponents\u002Fks-calendar"},{title:"Checkbox Button Groups",path:"\u002Fcomponents\u002Fks-checkbox-group"},{title:"Checkbox Buttons",path:"\u002Fcomponents\u002Fks-checkbox"},{title:"Datepicker",path:"\u002Fcomponents\u002Fks-datepicker"},{title:"Drag and Drop",path:"\u002Fcomponents\u002Fks-drag-drop"},{title:"Loader Line",path:"\u002Fcomponents\u002Fks-loader-line"},{title:"Loader Spinner",path:"\u002Fcomponents\u002Fks-loader-spinner"},{title:"Modal",path:"\u002Fcomponents\u002Fks-modal"},{title:"Paginator",path:"\u002Fcomponents\u002Fks-paginator"},{title:"Radio Button Groups",path:"\u002Fcomponents\u002Fks-radio-group"},{title:"Radio Buttons",path:"\u002Fcomponents\u002Fks-radio"},{title:g,path:l},{title:"Step Through",path:"\u002Fcomponents\u002Fks-step-through"},{title:"Tabs",path:"\u002Fcomponents\u002Fks-tabs"},{title:"Timepicker",path:"\u002Fcomponents\u002Fks-timepicker"},{title:"Toast",path:"\u002Fcomponents\u002Fks-toast"},{title:"Tooltip",path:"\u002Fcomponents\u002Fks-tooltip"}]}},mutations:void 0}}("Boolean",false,"String","NULL",true,"Number","Select","name","String (required)","labelKey",null,"\u002Fcomponents\u002Fks-select","2021-03-10T18:48:29.003Z")));
__NUXT_JSONP__("/components/ks-autocomplete", (function(a,b,c,d,e,f,g,h,i,j){return {data:[{data:{slug:"ks-autocomplete",title:g,source:"PageKsAutocomplete",api:{props:[{name:"value",vmodel:e,type:"String, Number",default:f,description:"This is the prop that the v-model will bind to. So if you are using v-model you can omit this."},{name:"items",type:"Array",default:f,description:"This is the list of options. \u003Cpre\u003E[{Option data...},{Option data...}]\u003C\u002Fpre\u003E"},{name:"placeholder",type:c,default:"Select...",description:"The placeholder in the select when nothing is selected."},{name:"minSearch",type:d,default:0,description:"Minimum number of characters typed in the search box needed to trigger the search"},{name:"multiple",type:a,default:b,description:"Whether or not to support multiple selections"},{name:"taggable",type:a,default:b,description:"When true the user is allowed to enter values not in the list items."},{name:"groupBy",type:c,default:f,description:"The key to group items by. Dot notation is supported for nested values in the items."},{name:"showTagInList",type:a,default:b,description:"Depends on taggable. When true the taggable will be shown in the list as \"\u003Cem\u003EAdd\u003C\u002Fem\u003E {term}\""},{name:"delay",type:d,default:100,description:"The amount of delay to be used when searching"},{name:"searchThreshold",type:d,default:7,description:"The minimum number of items for the search input to be shown."},{name:"keepTextOnDelete",type:a,default:b,description:"When set to true if a user deletes a selection it will retain the text of the selection"},{name:"itemFilter",type:"Function, String",default:h,description:"When a function is provided it will be used when filtering results from the search box. The function should accept the item as a parameter and should return true for a match. If a String is provided it is used as the key to filter on when filtering items."},{name:h,type:c,default:"name",description:"This is the key used as the value for the items. And it is used to display selections"},{name:"listHeight",type:c,default:"250px",description:"The height of the drop down list"},{name:"cacheResults",type:a,default:e,description:"Whether or not to cache search results."},{name:"paginated",type:a,default:b,description:"Whether or not the search data is being paginated. When true the select will emit the search event when the list is navigated to the end."},{name:"paginateThreshold",type:d,default:3,description:"Determines when the paginate request will be called. So when the user scrolls down the list if this is set to 3 the request will be made when the user is 3 list items away from the bottom of the list."},{name:"stopParentScroll",type:a,default:e,description:"When set to true the list will automatically prevent the parent container from scrolling when the list scroll has reached the bottom."},{name:"emptyMessage",type:c,default:null,description:"A message to use when the select is empty. (ex: \"No Results\"). If left blank then no message will show up."},{name:"acceptEmptySelection",type:a,default:b,description:"Works with the emptyMessage property. If this is set to true the empty option will be a selectable item instead of just text."}],events:[{name:"input",description:"Fired when the value is changed"},{name:"tag-created",description:"When a tag is created this will fire with the new tag in the payload"},{name:"deleted",description:"When a selection is deleted this will be fired with the deleted selection in the payload"},{name:"focus",description:"Fired when the input field is focused."},{name:"blur",description:"Fired when the input field is blurred"},{name:"clear",description:"Fired when the list is cleared"},{name:"selected-empty",description:"Fired when \u003Ccode\u003EacceptEmptySelection\u003C\u002Fcode\u003E prop is set to true and the autocomplete term is not in the list."},{name:"search",description:"Fired when the input field is expecting a search to be performed. (depends on the minSearch prop) The payload is as follows...\n\u003Cpre\u003E\n    {\n        term: term, \u002F\u002F the term used in the search\n        page: page, \u002F\u002F the page of the search being requested\n        callback: function\n        \u002F\u002F The callback function should be called with the proper endpoint to use\n        \u002F\u002F an optional data key param can be sent as second parameter\n        \u002F\u002F example: callback(`countries?q=${term}&page=${page}`, 'results')\n    }\n\u003C\u002Fpre\u003E\n"}],methods:[{name:"clearSelection(selection (optional))",description:"Clears a selection from the selection(s). If not parameter is passed the it will remove all selections."},{name:"selectionValue()",description:"Returns the value of the selection"},{name:"selectItem(item_index)",description:"Selects the item at the given index"},{name:"addSelection(selection)",description:"Adds a selection to the list of selections when multiple is being used"},{name:"selectUp()",description:"Moves the selection up"},{name:"selectDown()",description:"Moves the selection down"},{name:"clear()",description:"Clears the search field"},{name:"clearCache()",description:"Clears the search cache"},{name:"getSelectedItem()",description:"Retrieves the selected item from list"},{name:"getItemByIndex(item_index)",description:"Retrieves an item by the given index"},{name:"refreshSelection()",description:"Updates the selection display. This should not be needed since the autocomplete will automatically refresh the display"},{name:"reset()",description:"Clears selection, items, and cache"}],slots:[{name:"default",description:"This is a \u003Ca href=\"https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002Fcomponents.html#Scoped-Slots\" target=\"_blank\"\u003Escoped slot\u003C\u002Fa\u003E. This is used so that you have more control over the look of the data. The component loops through the data and passes the props with a props attribute. An example can be seem above in either the Multiple selection examples."},{name:"label",description:"This is a scoped slot. It will allow you to control the display of the selection."}]},toc:[],body:{type:"root",children:[]},dir:"\u002Fcomponents",path:i,extension:".md",createdAt:j,updatedAt:j}}],fetch:{"components:0":{components:[{title:"Accordion",path:"\u002Fcomponents\u002Fks-accordion"},{title:"Action Menu",path:"\u002Fcomponents\u002Fks-action-menu"},{title:g,path:i},{title:"Buttons",path:"\u002Fcomponents\u002Fks-button"},{title:"Calendar",path:"\u002Fcomponents\u002Fks-calendar"},{title:"Checkbox Button Groups",path:"\u002Fcomponents\u002Fks-checkbox-group"},{title:"Checkbox Buttons",path:"\u002Fcomponents\u002Fks-checkbox"},{title:"Datepicker",path:"\u002Fcomponents\u002Fks-datepicker"},{title:"Drag and Drop",path:"\u002Fcomponents\u002Fks-drag-drop"},{title:"Loader Line",path:"\u002Fcomponents\u002Fks-loader-line"},{title:"Loader Spinner",path:"\u002Fcomponents\u002Fks-loader-spinner"},{title:"Modal",path:"\u002Fcomponents\u002Fks-modal"},{title:"Paginator",path:"\u002Fcomponents\u002Fks-paginator"},{title:"Radio Button Groups",path:"\u002Fcomponents\u002Fks-radio-group"},{title:"Radio Buttons",path:"\u002Fcomponents\u002Fks-radio"},{title:"Select",path:"\u002Fcomponents\u002Fks-select"},{title:"Step Through",path:"\u002Fcomponents\u002Fks-step-through"},{title:"Tabs",path:"\u002Fcomponents\u002Fks-tabs"},{title:"Timepicker",path:"\u002Fcomponents\u002Fks-timepicker"},{title:"Toast",path:"\u002Fcomponents\u002Fks-toast"},{title:"Tooltip",path:"\u002Fcomponents\u002Fks-tooltip"}]}},mutations:void 0}}("Boolean",false,"String","Number",true,"NULL","AutoComplete","selectionKey","\u002Fcomponents\u002Fks-autocomplete","2022-05-09T17:24:41.299Z")));